<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sise.design.dao.Student_ClassMapper">
  <resultMap id="BaseResultMap" type="com.sise.design.bean.Student_Class">
    <id column="num" jdbcType="INTEGER" property="num" />
    <result column="s_id" jdbcType="INTEGER" property="sId" />
    <result column="cl_id" jdbcType="INTEGER" property="clId" />
  </resultMap>
  <resultMap id="WithcIdResultMap" type="com.sise.design.bean.Student_Class">
    <id column="num" jdbcType="INTEGER" property="num" />
    <result column="s_id" jdbcType="INTEGER" property="sId" />
    <result column="cl_id" jdbcType="INTEGER" property="clId" />
    <!-- 指定联合查询出的部门字段的封装  -->
    <association property="c" javaType="com.sise.design.bean.Clazz">
    	<id column="cl_id" property="clId"/>
    	<result column="c_id" property="cId"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    num, s_id, cl_id
  </sql>
  <sql id="WithcId_Column_List">
    s.num, s.s_id, s.cl_id, cl.cl_id, cl.c_id
  </sql>
  <select id="selectByExampleWithcId" resultMap="WithcIdResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithcId_Column_List" />
    from student_class s
    left join clazz cl on s.`cl_id`=cl.`cl_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithcId" resultMap="WithcIdResultMap">
    select 
    <include refid="WithcId_Column_List" />
    from student_class s
    left join clazz cl on s.`cl_id`=cl.`cl_id`
    where num = #{num,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" parameterType="com.sise.design.bean.Student_ClassExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_class
    where num = #{num,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_class
    where num = #{num,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sise.design.bean.Student_ClassExample">
    delete from student_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sise.design.bean.Student_Class">
    insert into student_class (num, s_id, cl_id
      )
    values (#{num,jdbcType=INTEGER}, #{sId,jdbcType=INTEGER}, #{clId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sise.design.bean.Student_Class">
    insert into student_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="num != null">
        num,
      </if>
      <if test="sId != null">
        s_id,
      </if>
      <if test="clId != null">
        cl_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="sId != null">
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="clId != null">
        #{clId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sise.design.bean.Student_ClassExample" resultType="java.lang.Long">
    select count(*) from student_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_class
    <set>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.sId != null">
        s_id = #{record.sId,jdbcType=INTEGER},
      </if>
      <if test="record.clId != null">
        cl_id = #{record.clId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_class
    set num = #{record.num,jdbcType=INTEGER},
      s_id = #{record.sId,jdbcType=INTEGER},
      cl_id = #{record.clId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sise.design.bean.Student_Class">
    update student_class
    <set>
      <if test="sId != null">
        s_id = #{sId,jdbcType=INTEGER},
      </if>
      <if test="clId != null">
        cl_id = #{clId,jdbcType=INTEGER},
      </if>
    </set>
    where num = #{num,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sise.design.bean.Student_Class">
    update student_class
    set s_id = #{sId,jdbcType=INTEGER},
      cl_id = #{clId,jdbcType=INTEGER}
    where num = #{num,jdbcType=INTEGER}
  </update>
</mapper>